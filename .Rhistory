laurus<-"schwanger"
laurus
ritel<-"Katze"
laurus + ritel
laurus
laurus
x<-4
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
x <- 1:4
y<-2
x+y
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <- 0
x
install.packages("swirl")
library(swirl)
install.packages("swirl")
library(swirl)
install.packages("swirl")
library(swirl)
remove.packages("swirl")
install.packages("swirl")
remove.packages("swirl")
library(swirl)
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
c
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<.z/my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
c(1,2,3,4)+c(0,10,100)
c(1,2,3,4)+c(0,10,1000)
z*2+1000
my_div
swirl()
swirl()
library(swirl)
swirl()
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[(-c(2,10))]
x[-c(2, 10)]
c(foo=11,bar=2,norf=NA)
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_data,cnames)
colnames(my_data)<-cnames
my_data
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5 NOT=7
5 =NOT 7
?NOT
??NOT
!5=7
!5==1
!5==7
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5>8||6!=8&&4>3.9
isTRUE(6>4)
identical('twins','twins')
xor(5 == 6, !FALSE)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
swirl()
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function')
boring_function('My first function!')
boring_function()
boring_function
submit()
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
submit()
evaluate(rnorm,c(1.4,3.6,7.9,8.8))
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[-1]},c(8,4,0))
?paste
paste("Programming","is""fun!")
paste("Programming","is","fun!")
submit()
telegram("Hallo Laurus")
submit()
mad_libs("Berlin","schwanger","Laurus")
0
exit()
?swirl
bye()
library(swirl)
swirl()
submit()
submit()
'I'%p%'love'
'I'%p%'love'%'R'
'I'%p%'love'%p%'R'
'I'%p%'love'%p%'R!'
head(flags)
dim(flags)
viewinfo(flags)
viewinfo()
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags,unique)
unique_vals
length(unique_vals)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique,vals, function(elem) elem[2])
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
cube<-function(x,n){xÂ³}
cube<-function(x,n){x^3}
cube(3)
x<-1:10
if(x>5){x<-0}
z<-10
f(3)
f(3)
f(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
getwd()
getwd()
getwd()
pollutantmean <- function(directory, pollutant, id = 1:332) {
}
pollutantmean()
pollutantmean
pollutantmean
pollutantmean
pollutantmean <- function(directory, pollutant, id = 1:332) {
}
pollutantmean("specdata", "nitrate", 23)
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean <- function(directory, pollutant, id = 1:332) {
files_list <- list.files(directory, full.names=TRUE)
dat <- data.frame()
for (i in 1:332){
dat <- rbind(dat, read.csv(files_list[i]))
}
dat_subset <- dat[which(dat[, "ID"] %in% id),]
mean(dat_subset[, pollutant], na.rm=TRUE)
}
pollutantmean("specdata", "nitrate", 23)
getwd()
setwd("home/mjm/ProgrammingAssignment2")
setwd("home/mjm/ProgrammingAssignment2")
list.files
ls
list.files(getwd())
setwd("home/mjm/ProgrammingAssignment2/")
setwd("home/mjm/Documents/")
setwd("home/mjm/Documents")
getwd()
setwd("/home/mjm/ProgrammingAssignment2")
source("cachematrix.R")
source("cachevec.R")
makeVector(c(7,4,5))
cachemean()
cachemean(c(4,7,8))
cachemean(45)
a<-makeVector(c(7,4,5))
a$get()
a$getmean()
a$setmean()
a$setmean(22)
a$getmean()
a$setmean(x)
a$getmean()
x
y
a$set(c(7,4,1,2))
a$getmean()
x
a$setmean(7)
a$getmean()
cachemean((a))
cachemean(a)
a$set(c(7,4,1,66,8))
cachemean(a)
c=rbind(c(1, -1/4), c(-1/4, 1))
ginv(c)
library(MASS)
ginv(c)
c
c=rbind(c(1, 7), c(-1/4, 1))
c
ginv(c)
solve(c) %*% c
c
solve(c) %*% c
solve(c) * c
c=rbind(c(1, -1/4), c(-1/4, 1))
source("cachematrix.R")
makeCacheMatrix(c)
cacheSolve(c)
d<-makeCacheMatrix(c)
cacheSolve(d)
d$get
class(c)
source("cachematrix.R")
source("cachematrix.R")
d<-makeCacheMatrix(c)
d$getinverse()
d$get()
cacheSolve(d)
source("cachematrix.R")
d<-makeCacheMatrix(c)
cacheSolve(d)
